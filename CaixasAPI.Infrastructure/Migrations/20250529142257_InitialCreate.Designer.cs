// <auto-generated />
using CaixasAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaixasAPI.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529142257_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.CaixaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Caixas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DimensoesId = 1,
                            Nome = "Caixa 1",
                            PedidoId = 1
                        },
                        new
                        {
                            Id = 2,
                            DimensoesId = 2,
                            Nome = "Caixa 2",
                            PedidoId = 1
                        },
                        new
                        {
                            Id = 3,
                            DimensoesId = 3,
                            Nome = "Caixa 3",
                            PedidoId = 1
                        });
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.DimensoesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int?>("CaixaId")
                        .HasColumnType("int");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int");

                    b.Property<int>("Largura")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId")
                        .IsUnique()
                        .HasFilter("[CaixaId] IS NOT NULL");

                    b.HasIndex("ProdutoId")
                        .IsUnique()
                        .HasFilter("[ProdutoId] IS NOT NULL");

                    b.ToTable("Dimensoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 30,
                            CaixaId = 1,
                            Comprimento = 80,
                            Largura = 40
                        },
                        new
                        {
                            Id = 2,
                            Altura = 80,
                            CaixaId = 2,
                            Comprimento = 40,
                            Largura = 50
                        },
                        new
                        {
                            Id = 3,
                            Altura = 50,
                            CaixaId = 3,
                            Comprimento = 60,
                            Largura = 80
                        });
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.PedidoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NumeroPedido = "Pedido Inicial"
                        });
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaixaId")
                        .HasColumnType("int");

                    b.Property<int>("DimensoesId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.HasIndex("PedidoId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.CaixaEntity", b =>
                {
                    b.HasOne("CaixasAPI.Infrastructure.Entities.PedidoEntity", "Pedido")
                        .WithMany("Caixas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.DimensoesEntity", b =>
                {
                    b.HasOne("CaixasAPI.Infrastructure.Entities.CaixaEntity", "Caixa")
                        .WithOne("Dimensoes")
                        .HasForeignKey("CaixasAPI.Infrastructure.Entities.DimensoesEntity", "CaixaId");

                    b.HasOne("CaixasAPI.Infrastructure.Entities.ProdutoEntity", "Produto")
                        .WithOne("Dimensoes")
                        .HasForeignKey("CaixasAPI.Infrastructure.Entities.DimensoesEntity", "ProdutoId");

                    b.Navigation("Caixa");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.ProdutoEntity", b =>
                {
                    b.HasOne("CaixasAPI.Infrastructure.Entities.CaixaEntity", "Caixa")
                        .WithMany("Produtos")
                        .HasForeignKey("CaixaId");

                    b.HasOne("CaixasAPI.Infrastructure.Entities.PedidoEntity", "Pedido")
                        .WithMany("Produtos")
                        .HasForeignKey("PedidoId");

                    b.Navigation("Caixa");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.CaixaEntity", b =>
                {
                    b.Navigation("Dimensoes")
                        .IsRequired();

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.PedidoEntity", b =>
                {
                    b.Navigation("Caixas");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("CaixasAPI.Infrastructure.Entities.ProdutoEntity", b =>
                {
                    b.Navigation("Dimensoes")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
